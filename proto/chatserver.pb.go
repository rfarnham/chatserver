// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chatserver.proto

package chatserver

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Authenticate struct {
	Sender               string   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Authenticate) Reset()         { *m = Authenticate{} }
func (m *Authenticate) String() string { return proto.CompactTextString(m) }
func (*Authenticate) ProtoMessage()    {}
func (*Authenticate) Descriptor() ([]byte, []int) {
	return fileDescriptor_chatserver_7758d614d8ae2a1d, []int{0}
}
func (m *Authenticate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Authenticate.Unmarshal(m, b)
}
func (m *Authenticate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Authenticate.Marshal(b, m, deterministic)
}
func (dst *Authenticate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Authenticate.Merge(dst, src)
}
func (m *Authenticate) XXX_Size() int {
	return xxx_messageInfo_Authenticate.Size(m)
}
func (m *Authenticate) XXX_DiscardUnknown() {
	xxx_messageInfo_Authenticate.DiscardUnknown(m)
}

var xxx_messageInfo_Authenticate proto.InternalMessageInfo

func (m *Authenticate) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

type JoinChannel struct {
	Channel              string   `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinChannel) Reset()         { *m = JoinChannel{} }
func (m *JoinChannel) String() string { return proto.CompactTextString(m) }
func (*JoinChannel) ProtoMessage()    {}
func (*JoinChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_chatserver_7758d614d8ae2a1d, []int{1}
}
func (m *JoinChannel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinChannel.Unmarshal(m, b)
}
func (m *JoinChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinChannel.Marshal(b, m, deterministic)
}
func (dst *JoinChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinChannel.Merge(dst, src)
}
func (m *JoinChannel) XXX_Size() int {
	return xxx_messageInfo_JoinChannel.Size(m)
}
func (m *JoinChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinChannel.DiscardUnknown(m)
}

var xxx_messageInfo_JoinChannel proto.InternalMessageInfo

func (m *JoinChannel) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

type LeaveChannel struct {
	Channel              string   `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaveChannel) Reset()         { *m = LeaveChannel{} }
func (m *LeaveChannel) String() string { return proto.CompactTextString(m) }
func (*LeaveChannel) ProtoMessage()    {}
func (*LeaveChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_chatserver_7758d614d8ae2a1d, []int{2}
}
func (m *LeaveChannel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaveChannel.Unmarshal(m, b)
}
func (m *LeaveChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaveChannel.Marshal(b, m, deterministic)
}
func (dst *LeaveChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaveChannel.Merge(dst, src)
}
func (m *LeaveChannel) XXX_Size() int {
	return xxx_messageInfo_LeaveChannel.Size(m)
}
func (m *LeaveChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaveChannel.DiscardUnknown(m)
}

var xxx_messageInfo_LeaveChannel proto.InternalMessageInfo

func (m *LeaveChannel) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

type BroadcastSend struct {
	Channel              string   `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Contents             string   `protobuf:"bytes,2,opt,name=contents,proto3" json:"contents,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BroadcastSend) Reset()         { *m = BroadcastSend{} }
func (m *BroadcastSend) String() string { return proto.CompactTextString(m) }
func (*BroadcastSend) ProtoMessage()    {}
func (*BroadcastSend) Descriptor() ([]byte, []int) {
	return fileDescriptor_chatserver_7758d614d8ae2a1d, []int{3}
}
func (m *BroadcastSend) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BroadcastSend.Unmarshal(m, b)
}
func (m *BroadcastSend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BroadcastSend.Marshal(b, m, deterministic)
}
func (dst *BroadcastSend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BroadcastSend.Merge(dst, src)
}
func (m *BroadcastSend) XXX_Size() int {
	return xxx_messageInfo_BroadcastSend.Size(m)
}
func (m *BroadcastSend) XXX_DiscardUnknown() {
	xxx_messageInfo_BroadcastSend.DiscardUnknown(m)
}

var xxx_messageInfo_BroadcastSend proto.InternalMessageInfo

func (m *BroadcastSend) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *BroadcastSend) GetContents() string {
	if m != nil {
		return m.Contents
	}
	return ""
}

type PrivateSend struct {
	Channel              string   `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Recipient            string   `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Contents             string   `protobuf:"bytes,3,opt,name=contents,proto3" json:"contents,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrivateSend) Reset()         { *m = PrivateSend{} }
func (m *PrivateSend) String() string { return proto.CompactTextString(m) }
func (*PrivateSend) ProtoMessage()    {}
func (*PrivateSend) Descriptor() ([]byte, []int) {
	return fileDescriptor_chatserver_7758d614d8ae2a1d, []int{4}
}
func (m *PrivateSend) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivateSend.Unmarshal(m, b)
}
func (m *PrivateSend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivateSend.Marshal(b, m, deterministic)
}
func (dst *PrivateSend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateSend.Merge(dst, src)
}
func (m *PrivateSend) XXX_Size() int {
	return xxx_messageInfo_PrivateSend.Size(m)
}
func (m *PrivateSend) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateSend.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateSend proto.InternalMessageInfo

func (m *PrivateSend) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *PrivateSend) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *PrivateSend) GetContents() string {
	if m != nil {
		return m.Contents
	}
	return ""
}

type ClientMessage struct {
	// Types that are valid to be assigned to Message:
	//	*ClientMessage_Authenticate
	//	*ClientMessage_JoinChannel
	//	*ClientMessage_LeaveChannel
	//	*ClientMessage_BroadcastSend
	//	*ClientMessage_PrivateSend
	Message              isClientMessage_Message `protobuf_oneof:"Message"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ClientMessage) Reset()         { *m = ClientMessage{} }
func (m *ClientMessage) String() string { return proto.CompactTextString(m) }
func (*ClientMessage) ProtoMessage()    {}
func (*ClientMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_chatserver_7758d614d8ae2a1d, []int{5}
}
func (m *ClientMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientMessage.Unmarshal(m, b)
}
func (m *ClientMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientMessage.Marshal(b, m, deterministic)
}
func (dst *ClientMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientMessage.Merge(dst, src)
}
func (m *ClientMessage) XXX_Size() int {
	return xxx_messageInfo_ClientMessage.Size(m)
}
func (m *ClientMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ClientMessage proto.InternalMessageInfo

type isClientMessage_Message interface {
	isClientMessage_Message()
}

type ClientMessage_Authenticate struct {
	Authenticate *Authenticate `protobuf:"bytes,1,opt,name=Authenticate,proto3,oneof"`
}

type ClientMessage_JoinChannel struct {
	JoinChannel *JoinChannel `protobuf:"bytes,2,opt,name=join_channel,json=joinChannel,proto3,oneof"`
}

type ClientMessage_LeaveChannel struct {
	LeaveChannel *LeaveChannel `protobuf:"bytes,3,opt,name=leave_channel,json=leaveChannel,proto3,oneof"`
}

type ClientMessage_BroadcastSend struct {
	BroadcastSend *BroadcastSend `protobuf:"bytes,4,opt,name=broadcast_send,json=broadcastSend,proto3,oneof"`
}

type ClientMessage_PrivateSend struct {
	PrivateSend *PrivateSend `protobuf:"bytes,5,opt,name=private_send,json=privateSend,proto3,oneof"`
}

func (*ClientMessage_Authenticate) isClientMessage_Message() {}

func (*ClientMessage_JoinChannel) isClientMessage_Message() {}

func (*ClientMessage_LeaveChannel) isClientMessage_Message() {}

func (*ClientMessage_BroadcastSend) isClientMessage_Message() {}

func (*ClientMessage_PrivateSend) isClientMessage_Message() {}

func (m *ClientMessage) GetMessage() isClientMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ClientMessage) GetAuthenticate() *Authenticate {
	if x, ok := m.GetMessage().(*ClientMessage_Authenticate); ok {
		return x.Authenticate
	}
	return nil
}

func (m *ClientMessage) GetJoinChannel() *JoinChannel {
	if x, ok := m.GetMessage().(*ClientMessage_JoinChannel); ok {
		return x.JoinChannel
	}
	return nil
}

func (m *ClientMessage) GetLeaveChannel() *LeaveChannel {
	if x, ok := m.GetMessage().(*ClientMessage_LeaveChannel); ok {
		return x.LeaveChannel
	}
	return nil
}

func (m *ClientMessage) GetBroadcastSend() *BroadcastSend {
	if x, ok := m.GetMessage().(*ClientMessage_BroadcastSend); ok {
		return x.BroadcastSend
	}
	return nil
}

func (m *ClientMessage) GetPrivateSend() *PrivateSend {
	if x, ok := m.GetMessage().(*ClientMessage_PrivateSend); ok {
		return x.PrivateSend
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ClientMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ClientMessage_OneofMarshaler, _ClientMessage_OneofUnmarshaler, _ClientMessage_OneofSizer, []interface{}{
		(*ClientMessage_Authenticate)(nil),
		(*ClientMessage_JoinChannel)(nil),
		(*ClientMessage_LeaveChannel)(nil),
		(*ClientMessage_BroadcastSend)(nil),
		(*ClientMessage_PrivateSend)(nil),
	}
}

func _ClientMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ClientMessage)
	// Message
	switch x := m.Message.(type) {
	case *ClientMessage_Authenticate:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Authenticate); err != nil {
			return err
		}
	case *ClientMessage_JoinChannel:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.JoinChannel); err != nil {
			return err
		}
	case *ClientMessage_LeaveChannel:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LeaveChannel); err != nil {
			return err
		}
	case *ClientMessage_BroadcastSend:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BroadcastSend); err != nil {
			return err
		}
	case *ClientMessage_PrivateSend:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PrivateSend); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ClientMessage.Message has unexpected type %T", x)
	}
	return nil
}

func _ClientMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ClientMessage)
	switch tag {
	case 1: // Message.Authenticate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Authenticate)
		err := b.DecodeMessage(msg)
		m.Message = &ClientMessage_Authenticate{msg}
		return true, err
	case 2: // Message.join_channel
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(JoinChannel)
		err := b.DecodeMessage(msg)
		m.Message = &ClientMessage_JoinChannel{msg}
		return true, err
	case 3: // Message.leave_channel
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LeaveChannel)
		err := b.DecodeMessage(msg)
		m.Message = &ClientMessage_LeaveChannel{msg}
		return true, err
	case 4: // Message.broadcast_send
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BroadcastSend)
		err := b.DecodeMessage(msg)
		m.Message = &ClientMessage_BroadcastSend{msg}
		return true, err
	case 5: // Message.private_send
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PrivateSend)
		err := b.DecodeMessage(msg)
		m.Message = &ClientMessage_PrivateSend{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ClientMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ClientMessage)
	// Message
	switch x := m.Message.(type) {
	case *ClientMessage_Authenticate:
		s := proto.Size(x.Authenticate)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ClientMessage_JoinChannel:
		s := proto.Size(x.JoinChannel)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ClientMessage_LeaveChannel:
		s := proto.Size(x.LeaveChannel)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ClientMessage_BroadcastSend:
		s := proto.Size(x.BroadcastSend)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ClientMessage_PrivateSend:
		s := proto.Size(x.PrivateSend)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ServerMessage struct {
	Sender               string   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Channel              string   `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Contents             string   `protobuf:"bytes,3,opt,name=contents,proto3" json:"contents,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerMessage) Reset()         { *m = ServerMessage{} }
func (m *ServerMessage) String() string { return proto.CompactTextString(m) }
func (*ServerMessage) ProtoMessage()    {}
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_chatserver_7758d614d8ae2a1d, []int{6}
}
func (m *ServerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerMessage.Unmarshal(m, b)
}
func (m *ServerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerMessage.Marshal(b, m, deterministic)
}
func (dst *ServerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerMessage.Merge(dst, src)
}
func (m *ServerMessage) XXX_Size() int {
	return xxx_messageInfo_ServerMessage.Size(m)
}
func (m *ServerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ServerMessage proto.InternalMessageInfo

func (m *ServerMessage) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *ServerMessage) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *ServerMessage) GetContents() string {
	if m != nil {
		return m.Contents
	}
	return ""
}

func init() {
	proto.RegisterType((*Authenticate)(nil), "Authenticate")
	proto.RegisterType((*JoinChannel)(nil), "JoinChannel")
	proto.RegisterType((*LeaveChannel)(nil), "LeaveChannel")
	proto.RegisterType((*BroadcastSend)(nil), "BroadcastSend")
	proto.RegisterType((*PrivateSend)(nil), "PrivateSend")
	proto.RegisterType((*ClientMessage)(nil), "ClientMessage")
	proto.RegisterType((*ServerMessage)(nil), "ServerMessage")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatServerClient is the client API for ChatServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatServerClient interface {
	Chat(ctx context.Context, opts ...grpc.CallOption) (ChatServer_ChatClient, error)
}

type chatServerClient struct {
	cc *grpc.ClientConn
}

func NewChatServerClient(cc *grpc.ClientConn) ChatServerClient {
	return &chatServerClient{cc}
}

func (c *chatServerClient) Chat(ctx context.Context, opts ...grpc.CallOption) (ChatServer_ChatClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChatServer_serviceDesc.Streams[0], "/ChatServer/Chat", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatServerChatClient{stream}
	return x, nil
}

type ChatServer_ChatClient interface {
	Send(*ClientMessage) error
	Recv() (*ServerMessage, error)
	grpc.ClientStream
}

type chatServerChatClient struct {
	grpc.ClientStream
}

func (x *chatServerChatClient) Send(m *ClientMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chatServerChatClient) Recv() (*ServerMessage, error) {
	m := new(ServerMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChatServerServer is the server API for ChatServer service.
type ChatServerServer interface {
	Chat(ChatServer_ChatServer) error
}

func RegisterChatServerServer(s *grpc.Server, srv ChatServerServer) {
	s.RegisterService(&_ChatServer_serviceDesc, srv)
}

func _ChatServer_Chat_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChatServerServer).Chat(&chatServerChatServer{stream})
}

type ChatServer_ChatServer interface {
	Send(*ServerMessage) error
	Recv() (*ClientMessage, error)
	grpc.ServerStream
}

type chatServerChatServer struct {
	grpc.ServerStream
}

func (x *chatServerChatServer) Send(m *ServerMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chatServerChatServer) Recv() (*ClientMessage, error) {
	m := new(ClientMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ChatServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ChatServer",
	HandlerType: (*ChatServerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Chat",
			Handler:       _ChatServer_Chat_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "chatserver.proto",
}

func init() { proto.RegisterFile("chatserver.proto", fileDescriptor_chatserver_7758d614d8ae2a1d) }

var fileDescriptor_chatserver_7758d614d8ae2a1d = []byte{
	// 352 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x93, 0xb4, 0xb6, 0x76, 0xf2, 0x07, 0xc9, 0x41, 0x42, 0xf1, 0x20, 0x39, 0x68, 0x0f,
	0x12, 0x6c, 0x2b, 0x08, 0xde, 0x6c, 0x11, 0x8a, 0x28, 0x48, 0x7a, 0x96, 0xb2, 0x4d, 0x07, 0x93,
	0x12, 0x36, 0x61, 0xb3, 0xf6, 0x13, 0xf9, 0x41, 0x25, 0x9b, 0x4d, 0xbb, 0x5b, 0x28, 0xbd, 0xe5,
	0x6d, 0x66, 0xe6, 0x0d, 0xbf, 0x37, 0x70, 0x95, 0xa4, 0x84, 0x57, 0xc8, 0x76, 0xc8, 0xa2, 0x92,
	0x15, 0xbc, 0x08, 0xef, 0xc0, 0x79, 0xfd, 0xe5, 0x29, 0x52, 0x9e, 0x25, 0x84, 0xa3, 0x7f, 0x0d,
	0xbd, 0x0a, 0xe9, 0x06, 0x59, 0x60, 0xde, 0x9a, 0xa3, 0x41, 0x2c, 0x55, 0x78, 0x0f, 0xf6, 0x7b,
	0x91, 0xd1, 0x79, 0x4a, 0x28, 0xc5, 0xdc, 0x0f, 0xa0, 0x9f, 0x34, 0x9f, 0xb2, 0xae, 0x95, 0xe1,
	0x08, 0x9c, 0x0f, 0x24, 0x3b, 0x3c, 0x5f, 0xf9, 0x06, 0xee, 0x8c, 0x15, 0x64, 0x93, 0x90, 0x8a,
	0x2f, 0x91, 0x6e, 0x4e, 0x97, 0xfa, 0x43, 0xb8, 0x4c, 0x0a, 0xca, 0x91, 0xf2, 0x2a, 0xb0, 0xc4,
	0xaf, 0xbd, 0x0e, 0x09, 0xd8, 0x5f, 0x2c, 0xdb, 0x11, 0x8e, 0x67, 0x86, 0xdc, 0xc0, 0x80, 0x61,
	0x92, 0x95, 0x19, 0x52, 0x2e, 0xa7, 0x1c, 0x1e, 0x34, 0x8b, 0xce, 0x91, 0xc5, 0x9f, 0x05, 0xee,
	0x3c, 0xaf, 0xcb, 0x3e, 0xb1, 0xaa, 0xc8, 0x0f, 0xfa, 0x53, 0x1d, 0x9b, 0xb0, 0xb2, 0x27, 0x6e,
	0xa4, 0x3e, 0x2e, 0x8c, 0x58, 0x67, 0x3b, 0x06, 0x67, 0x5b, 0x64, 0x74, 0xd5, 0xee, 0x67, 0x89,
	0x26, 0x27, 0x52, 0xc0, 0x2e, 0x8c, 0xd8, 0xde, 0x2a, 0x9c, 0x9f, 0xc0, 0xcd, 0x6b, 0x9a, 0xfb,
	0x9e, 0x8e, 0x34, 0x52, 0x19, 0xd7, 0x46, 0xb9, 0xca, 0xfc, 0x19, 0xbc, 0x75, 0x4b, 0x76, 0x55,
	0x07, 0x18, 0x74, 0x45, 0x9b, 0x17, 0x69, 0xc0, 0x17, 0x46, 0xec, 0xae, 0xb5, 0x04, 0xc6, 0xe0,
	0x94, 0x0d, 0xcb, 0xa6, 0xed, 0x42, 0x6e, 0xa8, 0x00, 0xae, 0x37, 0x2c, 0x0f, 0x72, 0x36, 0x80,
	0xbe, 0x84, 0x12, 0x7e, 0x83, 0xbb, 0x14, 0xb7, 0xd5, 0x52, 0x3a, 0x71, 0x4c, 0x6a, 0x46, 0xd6,
	0xe9, 0xa0, 0x8f, 0x52, 0x98, 0xbc, 0x00, 0xcc, 0x53, 0xc2, 0x1b, 0x0b, 0xff, 0x01, 0xba, 0xb5,
	0xf2, 0xbd, 0x48, 0x4b, 0x66, 0xe8, 0x45, 0xda, 0x0e, 0xa1, 0x31, 0x32, 0x1f, 0xcd, 0x75, 0x4f,
	0x5c, 0xfb, 0xf4, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x60, 0xae, 0xd3, 0x75, 0x01, 0x03, 0x00, 0x00,
}
